
---
layout: post
title: 使用Octave的梯度下降示例
description: 机器学习视频之梯度下降练习一
keywords: gradient descent
---


# 一个参数的线性回归
## 1.描绘数据散点图
{%highlight matlab%}
data = load('ex1data1.txt'); % read comma separated 
X = data(:, 1); 
y = data(:, 2);
m = length(y); % number of training example
plot(x, y, 'rx', 'MarkerSize', 10); % Plot the data 
ylabel('Profit in $10,000s'); % Set the y−axis label 
xlabel('Population of City in 10,000s'); % Set the x−axis label 
{%endhighlight matlab%}

doc eg:
 'x'  cross
 'r'  Red
 
plot (b, "*", "markersize", 10)
This command will plot the data in the variable 'b', with points 
displayed as '*' and a marker size of 10.

<img src="../../../static/images/sdt.png" width = "500" alt="dcxff" />

## 2.使用梯度下降计算参数
    
 <code>
    %梯度下降算法函数，储存在.m文件中
    function theta = gradientDescent1(x,y,m,alpha,iteraNum)
    theta = [0;0];
    for i=1:iteraNum
    j = x*theta- y;
    theta(1) = theta(1) - alpha*(1/m)*sum(j.*x(:,1));
    theta(2) = theta(2) - alpha*(1/m)*sum(j.*x(:,2));
    end;
    
    %调用
    theta = gradientDescent1(x,y,m,alpha,1500);
    hold on;
    plot(x(:,2),x*theta,'-')
    legend("Training Data","Linear Regression")
</code>
<img src="../../../static/images/tuxj.png" width = "500" alt="dcxff" />
